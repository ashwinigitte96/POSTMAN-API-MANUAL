{
	"info": {
		"_postman_id": "08d07d3a-75d2-4df8-8ead-ee4751dd921e",
		"name": "Collection_DemoRestAPIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25980902"
	},
	"item": [
		{
			"name": "GET_https://reqres.in/api/users?page=2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"  var jsonData = pm.response.json();",
							"pm.test('Status code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('Body matches string', function () {",
							"    pm.expect(pm.response.text()).to.include('Byron');",
							"})",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=utf-8\");",
							"});",
							"",
							"pm.test('Body is correct', function () {",
							"    pm.response.to.have.body({",
							"        'page': 2,",
							"        'per_page': 6,",
							"        'total': 12,",
							"        'total_pages': 2,",
							"        'data': [",
							"            {",
							"                'id': 7,",
							"                'email': 'michael.lawson@reqres.in',",
							"                'first_name': 'Michael',",
							"                'last_name': 'Lawson',",
							"                'avatar': 'https://reqres.in/img/faces/7-image.jpg'",
							"            },",
							"            {",
							"                'id': 8,",
							"                'email': 'lindsay.ferguson@reqres.in',",
							"                'first_name': 'Lindsay',",
							"                'last_name': 'Ferguson',",
							"                'avatar': 'https://reqres.in/img/faces/8-image.jpg'",
							"            },",
							"            {",
							"                'id': 9,",
							"                'email': 'tobias.funke@reqres.in',",
							"                'first_name': 'Tobias',",
							"                'last_name': 'Funke',",
							"                'avatar': 'https://reqres.in/img/faces/9-image.jpg'",
							"            },",
							"            {",
							"                'id': 10,",
							"                'email': 'byron.fields@reqres.in',",
							"                'first_name': 'Byron',",
							"                'last_name': 'Fields',",
							"                'avatar': 'https://reqres.in/img/faces/10-image.jpg'",
							"            },",
							"            {",
							"                'id': 11,",
							"                'email': 'george.edwards@reqres.in',",
							"                'first_name': 'George',",
							"                'last_name': 'Edwards',",
							"                'avatar': 'https://reqres.in/img/faces/11-image.jpg'",
							"            },",
							"            {",
							"                'id': 12,",
							"                'email': 'rachel.howell@reqres.in',",
							"                'first_name': 'Rachel',",
							"                'last_name': 'Howell',",
							"                'avatar': 'https://reqres.in/img/faces/12-image.jpg'",
							"            }",
							"        ],",
							"        'support': {",
							"            'url': 'https://reqres.in/#support-heading',",
							"            'text': 'To keep ReqRes free, contributions towards server costs are appreciated!'",
							"        }",
							"    });",
							"})",
							"",
							"pm.test('Validating page number', function () {",
							"   ",
							"    pm.expect(jsonData.page).to.eql(2);",
							"})",
							"",
							"pm.test('validating userIDs', function () {",
							"  ",
							"    pm.expect(jsonData.data[0].id).to.eql(7);",
							"    pm.expect(jsonData.data[1].id).to.eql(8);",
							"    pm.expect(jsonData.data[2].id).to.eql(9);",
							"    pm.expect(jsonData.data[3].id).to.eql(10);",
							"    pm.expect(jsonData.data[4].id).to.eql(11);",
							"    pm.expect(jsonData.data[5].id).to.eql(12);",
							"})",
							"",
							"pm.test(\"Validate All names\", function () {",
							"",
							"    pm.expect(jsonData.data[0].first_name).to.eql(\"Michael\");",
							"    pm.expect(jsonData.data[1].first_name).to.eql(\"Lindsay\");",
							"    pm.expect(jsonData.data[2].first_name).to.eql(\"Tobias\");",
							"    pm.expect(jsonData.data[3].first_name).to.eql(\"Byron\");",
							"    pm.expect(jsonData.data[4].first_name).to.eql(\"George\");",
							"    pm.expect(jsonData.data[5].first_name).to.eql(\"Rachel\");",
							"});",
							"pm.test(\"Validate all avatar\", function () {",
							"    ",
							"    pm.expect(jsonData.data[0].avatar).to.eql(\"https://reqres.in/img/faces/7-image.jpg\");",
							"    pm.expect(jsonData.data[1].avatar).to.eql(\"https://reqres.in/img/faces/8-image.jpg\");",
							"    pm.expect(jsonData.data[2].avatar).to.eql(\"https://reqres.in/img/faces/9-image.jpg\");",
							"    pm.expect(jsonData.data[3].avatar).to.eql(\"https://reqres.in/img/faces/10-image.jpg\");",
							"    pm.expect(jsonData.data[4].avatar).to.eql(\"https://reqres.in/img/faces/11-image.jpg\");",
							"    pm.expect(jsonData.data[5].avatar).to.eql(\"https://reqres.in/img/faces/12-image.jpg\");",
							"});",
							"pm.test(\"validate page number\", function () {",
							"   ",
							"    pm.expect(jsonData.page).to.eql(2);",
							"});",
							"pm.test(\" validate per_page users\", function () {",
							" ",
							"    pm.expect(jsonData.per_page).to.eql(6);",
							"});",
							"pm.test(\"validate total\", function () {",
							"  ",
							"    pm.expect(jsonData.total).to.eql(12);",
							"});",
							"pm.test(\"validate total_pages\", function () {",
							"   ",
							"    pm.expect(jsonData.total_pages).to.eql(2);",
							"});",
							"",
							"//JSON SCHEMA VALIDATION",
							"//convert json to json schema by using web tool",
							"var schema = {",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
							"  \"title\": \"Generated schema for Root\",",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"page\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"per_page\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"total\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"total_pages\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"data\": {",
							"      \"type\": \"array\",",
							"      \"items\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"          \"id\": {",
							"            \"type\": \"number\"",
							"          },",
							"          \"email\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"first_name\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"last_name\": {",
							"            \"type\": \"string\"",
							"          },",
							"          \"avatar\": {",
							"            \"type\": \"string\"",
							"          }",
							"        },",
							"        \"required\": [",
							"          \"id\",",
							"          \"email\",",
							"          \"first_name\",",
							"          \"last_name\",",
							"          \"avatar\"",
							"        ]",
							"      }",
							"    },",
							"    \"support\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"url\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"text\": {",
							"          \"type\": \"string\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"url\",",
							"        \"text\"",
							"      ]",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"page\",",
							"    \"per_page\",",
							"    \"total\",",
							"    \"total_pages\",",
							"    \"data\",",
							"    \"support\"",
							"  ]",
							"}",
							"pm.test('schema is valid', function(){",
							"pm.expect(tv4.validate(jsonData,schema)).to.be,true;",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?page=2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET ALL USERS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"validate a user details\", function () {\r",
							"\r",
							"    pm.expect(jsonData.data[4].id).to.eql(11);\r",
							"    pm.expect(jsonData.data[4].email).to.eql(\"george.edwards@reqres.in\");\r",
							"    pm.expect(jsonData.data[4].first_name).to.eql(\"George\");\r",
							"    pm.expect(jsonData.data[4].last_name).to.eql(\"Edwards\");\r",
							"    pm.expect(jsonData.data[4].avatar).to.eql(\"https://reqres.in/img/faces/11-image.jpg\");\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body({\r",
							"        \"page\": 2,\r",
							"        \"per_page\": 6,\r",
							"        \"total\": 12,\r",
							"        \"total_pages\": 2,\r",
							"        \"data\": [\r",
							"            {\r",
							"                \"id\": 7,\r",
							"                \"email\": \"michael.lawson@reqres.in\",\r",
							"                \"first_name\": \"Michael\",\r",
							"                \"last_name\": \"Lawson\",\r",
							"                \"avatar\": \"https://reqres.in/img/faces/7-image.jpg\"\r",
							"            },\r",
							"            {\r",
							"                \"id\": 8,\r",
							"                \"email\": \"lindsay.ferguson@reqres.in\",\r",
							"                \"first_name\": \"Lindsay\",\r",
							"                \"last_name\": \"Ferguson\",\r",
							"                \"avatar\": \"https://reqres.in/img/faces/8-image.jpg\"\r",
							"            },\r",
							"            {\r",
							"                \"id\": 9,\r",
							"                \"email\": \"tobias.funke@reqres.in\",\r",
							"                \"first_name\": \"Tobias\",\r",
							"                \"last_name\": \"Funke\",\r",
							"                \"avatar\": \"https://reqres.in/img/faces/9-image.jpg\"\r",
							"            },\r",
							"            {\r",
							"                \"id\": 10,\r",
							"                \"email\": \"byron.fields@reqres.in\",\r",
							"                \"first_name\": \"Byron\",\r",
							"                \"last_name\": \"Fields\",\r",
							"                \"avatar\": \"https://reqres.in/img/faces/10-image.jpg\"\r",
							"            },\r",
							"            {\r",
							"                \"id\": 11,\r",
							"                \"email\": \"george.edwards@reqres.in\",\r",
							"                \"first_name\": \"George\",\r",
							"                \"last_name\": \"Edwards\",\r",
							"                \"avatar\": \"https://reqres.in/img/faces/11-image.jpg\"\r",
							"            },\r",
							"            {\r",
							"                \"id\": 12,\r",
							"                \"email\": \"rachel.howell@reqres.in\",\r",
							"                \"first_name\": \"Rachel\",\r",
							"                \"last_name\": \"Howell\",\r",
							"                \"avatar\": \"https://reqres.in/img/faces/12-image.jpg\"\r",
							"            }\r",
							"        ],\r",
							"        \"support\": {\r",
							"            \"url\": \"https://reqres.in/#support-heading\",\r",
							"            \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"\r",
							"        }\r",
							"    });\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
							"});\r",
							"//schema validation\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
							"  \"title\": \"Generated schema for Root\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"page\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"per_page\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"total\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"total_pages\": {\r",
							"      \"type\": \"number\"\r",
							"    },\r",
							"    \"data\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": {\r",
							"        \"type\": \"object\",\r",
							"        \"properties\": {\r",
							"          \"id\": {\r",
							"            \"type\": \"number\"\r",
							"          },\r",
							"          \"email\": {\r",
							"            \"type\": \"string\"\r",
							"          },\r",
							"          \"first_name\": {\r",
							"            \"type\": \"string\"\r",
							"          },\r",
							"          \"last_name\": {\r",
							"            \"type\": \"string\"\r",
							"          },\r",
							"          \"avatar\": {\r",
							"            \"type\": \"string\"\r",
							"          }\r",
							"        },\r",
							"        \"required\": [\r",
							"          \"id\",\r",
							"          \"email\",\r",
							"          \"first_name\",\r",
							"          \"last_name\",\r",
							"          \"avatar\"\r",
							"        ]\r",
							"      }\r",
							"    },\r",
							"    \"support\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"text\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"url\",\r",
							"        \"text\"\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"page\",\r",
							"    \"per_page\",\r",
							"    \"total\",\r",
							"    \"total_pages\",\r",
							"    \"data\",\r",
							"    \"support\"\r",
							"  ]\r",
							"}\r",
							"pm.test('validate schema', function(){\r",
							"    pm.expect(jsonData.schema).to.be, true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users?page=2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET SINGLE USER NAME",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = JSON.parse(responseBody);\r",
							"tests[\"verify fname\"] = response.data.first_name == \"Eve\";\r",
							"tests[\"verify lname\"] = response.data.last_name == \"Holt\";\r",
							"\r",
							"//or u can use\r",
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Verify first_name and last_name \", function () {\r",
							"    \r",
							"    pm.expect(jsonData.data.first_name).to.eql(\"Eve\");\r",
							"    pm.expect(jsonData.data.last_name).to.eql(\"Holt\");\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body({\r",
							"    \"data\": {\r",
							"        \"id\": 4,\r",
							"        \"email\": \"eve.holt@reqres.in\",\r",
							"        \"first_name\": \"Eve\",\r",
							"        \"last_name\": \"Holt\",\r",
							"        \"avatar\": \"https://reqres.in/img/faces/4-image.jpg\"\r",
							"    },\r",
							"    \"support\": {\r",
							"        \"url\": \"https://reqres.in/#support-heading\",\r",
							"        \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"\r",
							"    }\r",
							"});\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"which Content-Type is present\", function () {\r",
							"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=utf-8\");\r",
							"});\r",
							"\r",
							"//schema validation\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
							"  \"title\": \"Generated schema for Root\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"data\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"number\"\r",
							"        },\r",
							"        \"email\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"first_name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"last_name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"avatar\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"email\",\r",
							"        \"first_name\",\r",
							"        \"last_name\",\r",
							"        \"avatar\"\r",
							"      ]\r",
							"    },\r",
							"    \"support\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"url\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"text\": {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"url\",\r",
							"        \"text\"\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"data\",\r",
							"    \"support\"\r",
							"  ]\r",
							"}\r",
							"pm.test('validate schema', function () {\r",
							"     \r",
							"    pm.expect(tv4.validate(jsonData,schema)).to.be, true;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/4",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST CREATE USER and  TEST SCHEMA",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							" var jsonData = pm.response.json();\r",
							" pm.test(\"Validate name and job of created user\", function () {\r",
							"   \r",
							"    pm.expect(jsonData.name).to.eql(\"morpheus\");\r",
							"     pm.expect(jsonData.job).to.eql(\"leader\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"//JSON SCHEMA VALIDATION\r",
							"//convert json to json schema by using web tool\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
							"  \"title\": \"Generated schema for Root\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"job\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"id\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"createdAt\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"name\",\r",
							"    \"job\",\r",
							"    \"id\",\r",
							"    \"createdAt\"\r",
							"  ]\r",
							"}\r",
							"pm.test('Schema is valid', function(){\r",
							"pm.expect(tv4.validate(jsonData, schema)).to.be,true;\r",
							"} );\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=utf-8\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST CREATE USER dataDrivenTesting",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"successful creation of user\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"});\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=utf-8\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"job\": \"{{job}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST VALID USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate presence of token\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"token\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
							"  \"title\": \"Generated schema for Root\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"token\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"token\"\r",
							"  ]\r",
							"}\r",
							" var jsonData = pm.response.json();\r",
							"pm.test(\"Schema validation\", function () {\r",
							"   pm.expect(tv4.validate(jsonData,schema)).to.be,true;\r",
							"  \r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/login",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST INVALID EMAIL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" var jsonData = pm.response.json();\r",
							"pm.test(\"validate error message\", function () {\r",
							"    pm.expect(jsonData.error).to.eql(\"user not found\");\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r",
							"  \"title\": \"Generated schema for Root\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"error\": {\r",
							"      \"type\": \"string\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"error\"\r",
							"  ]\r",
							"}\r",
							"pm.test('validate schema', function(){\r",
							"    pm.expect(tv4.validate(jsonData,schema)).to.be, true;\r",
							"});\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body({\r",
							"    \"error\": \"user not found\"\r",
							"});\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/login",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST MISSING EMAIL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"email missing test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"Missing email or username\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "//if want to retest with different test data \r\n//csv file is cerated with testData \r\n{\r\n  \r\n    \"password\": \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/login",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST MISSING PASSWD",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"validate error msg\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"Missing password\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/login",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Missing EMAIL AND PASSWD",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"validate error msg\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"Missing email or username\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/login",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST INVALID PASSWD",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate presence of token\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"token\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"xxxx\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/login",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"login"
					]
				}
			},
			"response": []
		}
	]
}